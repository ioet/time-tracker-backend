service: azure-time-tracker

frameworkVersion: '2'

provider:
  name: azure
  region: westus2
  runtime: python3.8
  os: linux
  resourceGroup: time-tracker-wus2-dev-nodejs-functions-rg
  stage: dev
  functionApp:
    name: sls-time-tracker

  appInsights:
    name: sls-time-tracker-ai

  storageAccount:
    name: slstimetracker

plugins:
  - serverless-azure-functions

package:
  patterns:
    - '!env/**'
    - '!.env/**'
    - '!local.settings.json'
    - '!.vscode/**'
    - '!__pycache__/**'
    - '!node_modules/**'
    - '!.python_packages/**'
    - '!.funcignore'
    - '!package.json'
    - '!package-lock.json'
    - '!.gitignore'
    - '!.git/**'

#region start Functions

functions:

#region Start Functions Activities

  get_activities:
    handler: time_tracker/activities/interface.get_activities
    events:
      - http: true
        x-azure-settings:
          methods:
            - GET
          route: activities/{id:?}
          authLevel: anonymous
          cors: true

  delete_activity:
    handler: time_tracker/activities/interface.delete_activity
    events:
      - http: true
        x-azure-settings:
          methods:
            - DELETE
          route: activities/{id}
          authLevel: anonymous
          cors: true

  update_activity:
    handler: time_tracker/activities/interface.update_activity
    events:
      - http: true
        x-azure-settings:
          methods:
            - PUT
          route: activities/{id}
          authLevel: anonymous
          cors: true

  create_activity:
    handler: time_tracker/activities/interface.create_activity
    events:
      - http: true
        x-azure-settings:
          methods:
            - POST
          route: activities/
          authLevel: anonymous
          cors: true

#endregion End Functions Activities

#region Start Functions Time-Entries

  create_time_entry:
    handler: time_tracker/time_entries/interface.create_time_entry
    events:
      - http: true
        x-azure-settings:
          methods:
            - POST
          route: time-entries/
          authLevel: anonymous
          cors: true

  get_time_entries:
    handler: time_tracker/time_entries/interface.get_time_entries
    events:
      - http: true
        x-azure-settings:
          methods:
            - GET
          route: time-entries/{id:?}
          authLevel: anonymous
          cors: true

  delete_time_entry:
    handler: time_tracker/time_entries/interface.delete_time_entry
    events:
      - http: true
        x-azure-settings:
          methods:
            - DELETE
          route: time-entries/{id}
          authLevel: anonymous
          cors: true

  update_time_entry:
    handler: time_tracker/time_entries/interface.update_time_entry
    events:
      - http: true
        x-azure-settings:
          methods:
            - PUT   
          route: time-entries/{id}
          authLevel: anonymous
          cors: true   

  get_latest_time_entry:
    handler: time_tracker/time_entries/interface.get_latest_entries
    events:
      - http: true
        x-azure-settings:
          methods:
            - GET
          route: time-entries/latest/
          authLevel: anonymous
          cors: true

#endregion End Functions Time-Entries

#region Start Functions Customers

  create_customer:
    handler: time_tracker/customers/interface.create_customer
    events:
      - http: true
        x-azure-settings:
          methods:
            - POST
          route: customers/
          authLevel: anonymous
          cors: true

  get_customers:
    handler: time_tracker/customers/interface.get_customers
    events:
      - http: true
        x-azure-settings:
          methods:
            - GET
          route: customers/{id:?}
          authLevel: anonymous
          cors: true

  update_customer:
    handler: time_tracker/customers/interface.update_customer
    events:
      - http: true
        x-azure-settings:
          methods:
            - PUT
          route: customers/{id}
          authLevel: anonymous
          cors: true

  delete_customer:
    handler: time_tracker/customers/interface.delete_customer
    events:
      - http: true
        x-azure-settings:
          methods:
            - DELETE
          route: customers/{id}
          authLevel: anonymous
          cors: true

#endregion End Functions Customers

#region Start Functions Projects

  get_projects:
    handler: time_tracker/projects/interface.get_projects
    events:
      - http: true
        x-azure-settings:
          methods:
            - GET
          route: projects/{id:?}
          authLevel: anonymous
          cors: true

  delete_project:
    handler: time_tracker/projects/interface.delete_project
    events:
      - http: true
        x-azure-settings:
          methods:
            - DELETE
          route: projects/{id}
          authLevel: anonymous
          cors: true

  update_project:
    handler: time_tracker/projects/interface.update_project
    events:
      - http: true
        x-azure-settings:
          methods:
            - PUT   
          route: projects/{id}
          authLevel: anonymous
          cors: true    

  create_project:
    handler: time_tracker/projects/interface.create_project
    events:
      - http: true
        x-azure-settings:
          methods:
            - POST
          route: projects/
          
          authLevel: anonymous
          cors: true

  get_latest_projects:
    handler: time_tracker/projects/interface.get_latest_projects
    events:
      - http: true
        x-azure-settings:
          methods:
            - GET
          route: projects/latest
          authLevel: anonymous
          cors: true

#endregion End Functions Projects

#endregion End Functions
